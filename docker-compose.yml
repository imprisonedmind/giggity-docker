# docker-compose.yml

services:
  mongodb:
    image: mongo:latest
    #    container_name: mongodb
    container_name: mongodb-test
    restart: always
    environment:
      #      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      #      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: gigs
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
#      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app_network

  api:
    build:
      context: https://github.com/${GITHUB_USERNAME}/giggity-bun-api.git#main
    #      args:
    #        - MONGODB_URI=mongodb://mongodb:27017
    container_name: bun_api
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env.bun
    environment:
      #      - MONGODB_URI=mongodb://mongodb:27017
      - PORT=8080
    depends_on:
      - mongodb
    networks:
      - app_network

  frontend:
    build:
      context: https://github.com/${GITHUB_USERNAME}/giggityv2.git#main
    #      args:
    #        - API_URL=http://api:8080
    container_name: nextjs_frontend
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - .env.nextjs
    #    environment:
    #      - API_URL=http://api:8080
    depends_on:
      - api
    networks:
      - app_network


  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - api
    networks:
      - app_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: always
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


networks:
  app_network:
    driver: bridge

volumes:
  mongodb_data: